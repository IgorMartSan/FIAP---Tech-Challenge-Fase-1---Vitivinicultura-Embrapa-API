services:

  backend:
    restart: always
    build:
      context: ./backend
      dockerfile: dockerfile
    ports:
      - ${PORT_API}:8010
    depends_on:
      - db_postgres
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    environment:
        #Database
        CONTAINER_NAME: backend
        DB_DRIVERNAME: ${DB_DRIVERNAME}
        DB_USER: ${DB_USER}
        DB_PASSWORD: ${DB_PASSWORD}
        DB_HOST: ${DB_HOST}
        DB_PORT: ${DB_PORT}

        #JWT
        SECRET_KEY: ${SECRET_KEY}
        ALGORITHM: ${ALGORITHM}
        ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES}
    volumes:
        -  ${PATH_LOGS}:/system_logs 
    networks:
      - networks_project


##########################################################################################

  redis:
    #container_name: sis_redis
    image: redis:latest
    restart: always
    ports:
      - ${REDIS_PORT}:6379
    #command: /bin/sh -c "redis-server --requirepass $$REDIS_PASSWORD" #NÃ£o funciona
    command: redis-server --requirepass mypassword #Funciona
    networks:
      - networks_project

  redis_insight:
    image: redislabs/redisinsight:latest
    #container_name: sis_redis_insight
    restart: always
    environment:
      REDISINSIGHT_REDIS_URI: redis://default:${REDIS_PASSWORD}@${IP}:${REDIS_PORT}
    ports:
      - ${REDIS_INSIGHT_PORT}:5540
    networks:
      - networks_project


  db_postgres:
    #container_name: db_postgres
    image: postgres:15.2-alpine
    restart: always
    ports:
      - ${DB_PORT}:5432
    environment:
    
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASENAME}
      # TZ: 'America/Sao_Paulo'
      # PGTZ: 'America/Sao_Paulo'
      # PGDATA: /var/lib/postgresql/data/pgdata 
    volumes:
      - ${PATH_VOL_POSTGRES}:/var/lib/postgresql/data
     # - ./config/postgres:/docker-entrypoint-initdb.d
    networks:
      - networks_project

  pgadmin:
    #container_name: sis_pgadmin
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
      TZ: America/Sao_Paulo
    ports:
      - ${PGADMIN_PORT}:80
    volumes:
      - ./config/pgadmin4/servers.json:/pgadmin4/servers.json
    networks:
      - networks_project



#rtsp://192.168.15.13:30050/mystream

  # rtsp-server:
  #   image: aler9/rtsp-simple-server
  #   container_name: rtsp-server
  #   restart: always
  #   ports:
  #     - "30050:8554"
  #   environment:
  #     - RTSP_PROTOCOLS=udp
  #   networks:
  #     - streaming_net

networks:
  networks_project:
    driver: bridge